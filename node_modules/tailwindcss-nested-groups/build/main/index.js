"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
var postcss_selector_parser_1 = __importDefault(require("postcss-selector-parser"));
var plugin_1 = __importDefault(require("tailwindcss/plugin"));
var nestedGroupPlugin = plugin_1["default"](function (_a) {
    var theme = _a.theme, addVariant = _a.addVariant, prefix = _a.prefix, escape = _a.e;
    var groupLevel = theme('groupLevel') || 10;
    var groupScope = theme('groupScope') || 'scope';
    var groupVariants = theme('groupVariants') || ['hover', 'focus'];
    groupVariants.forEach(function (groupVariant) {
        addVariant("group-" + groupVariant, function (_a) {
            var modifySelectors = _a.modifySelectors, separator = _a.separator;
            return modifySelectors(function (_a) {
                var selector = _a.selector;
                return postcss_selector_parser_1["default"](function (root) {
                    root.walkClasses(function (node) {
                        // Regular group
                        var value = node.value;
                        // eslint-disable-next-line functional/immutable-data
                        node.value = "group-" + groupVariant + separator + value;
                        if (node.parent && node.parent.parent) {
                            node.parent.insertBefore(node, postcss_selector_parser_1["default"]().astSync(prefix(".group:" + groupVariant + " ")));
                            // Named groups
                            node.parent.parent.insertAfter(node.parent, postcss_selector_parser_1["default"]().astSync(Array.from(Array(groupLevel))
                                .map(function (_x, index) {
                                return "" + prefix(".group-" + groupScope + ":" + groupVariant + Array.from(Array(index))
                                    .map(function () { return " > :not(.group-" + groupScope + ")"; })
                                    .join('') + " > .") + escape("group-" + groupScope + "-" + groupVariant + separator + value);
                            })
                                .join(',')));
                        }
                    });
                }).processSync(selector);
            });
        });
    });
});
module.exports = nestedGroupPlugin;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLG9GQUErRDtBQUMvRCw4REFBd0M7QUFFeEMsSUFBTSxpQkFBaUIsR0FBRyxtQkFBTSxDQUFDLFVBQUMsRUFBd0M7UUFBdEMsS0FBSyxXQUFBLEVBQUUsVUFBVSxnQkFBQSxFQUFFLE1BQU0sWUFBQSxFQUFLLE1BQU0sT0FBQTtJQUN0RSxJQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsWUFBWSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQzdDLElBQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxZQUFZLENBQUMsSUFBSSxPQUFPLENBQUM7SUFDbEQsSUFBTSxhQUFhLEdBQUcsS0FBSyxDQUFDLGVBQWUsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLE9BQU8sQ0FBQyxDQUFDO0lBRW5FLGFBQWEsQ0FBQyxPQUFPLENBQUMsVUFBQyxZQUFZO1FBQ2pDLFVBQVUsQ0FBQyxXQUFTLFlBQWMsRUFBRSxVQUFDLEVBQThCO2dCQUE1QixlQUFlLHFCQUFBLEVBQUUsU0FBUyxlQUFBO1lBQy9ELE9BQU8sZUFBZSxDQUFDLFVBQUMsRUFBWTtvQkFBVixRQUFRLGNBQUE7Z0JBQ2hDLE9BQU8sb0NBQWMsQ0FBQyxVQUFDLElBQUk7b0JBQ3pCLElBQUksQ0FBQyxXQUFXLENBQUMsVUFBQyxJQUFJO3dCQUNwQixnQkFBZ0I7d0JBQ2hCLElBQU0sS0FBSyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUM7d0JBQ3pCLHFEQUFxRDt3QkFDckQsSUFBSSxDQUFDLEtBQUssR0FBRyxXQUFTLFlBQVksR0FBRyxTQUFTLEdBQUcsS0FBTyxDQUFDO3dCQUV6RCxJQUFJLElBQUksQ0FBQyxNQUFNLElBQUksSUFBSSxDQUFDLE1BQU0sQ0FBQyxNQUFNLEVBQUU7NEJBQ3JDLElBQUksQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUN0QixJQUFJLEVBQ0osb0NBQWMsRUFBRSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsWUFBVSxZQUFZLE1BQUcsQ0FBQyxDQUFDLENBQzVELENBQUM7NEJBRUYsZUFBZTs0QkFDZixJQUFJLENBQUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQzVCLElBQUksQ0FBQyxNQUFjLEVBQ25CLG9DQUFjLEVBQUUsQ0FBQyxPQUFPLENBQ3RCLEtBQUssQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxDQUFDO2lDQUMxQixHQUFHLENBQ0YsVUFBQyxFQUFFLEVBQUUsS0FBSztnQ0FDUixPQUFBLEtBQUcsTUFBTSxDQUNQLFlBQVUsVUFBVSxTQUFJLFlBQVksR0FBRyxLQUFLLENBQUMsSUFBSSxDQUMvQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQ2I7cUNBQ0UsR0FBRyxDQUFDLGNBQU0sT0FBQSxvQkFBa0IsVUFBVSxNQUFHLEVBQS9CLENBQStCLENBQUM7cUNBQzFDLElBQUksQ0FBQyxFQUFFLENBQUMsU0FBTSxDQUNsQixHQUFHLE1BQU0sQ0FDUixXQUFTLFVBQVUsU0FBSSxZQUFZLEdBQUcsU0FBUyxHQUFHLEtBQU8sQ0FDeEQ7NEJBUkgsQ0FRRyxDQUNOO2lDQUNBLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FDYixDQUNGLENBQUM7eUJBQ0g7b0JBQ0gsQ0FBQyxDQUFDLENBQUM7Z0JBQ0wsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzNCLENBQUMsQ0FBQyxDQUFDO1FBQ0wsQ0FBQyxDQUFDLENBQUM7SUFDTCxDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDO2lCQUVZLGlCQUFpQiJ9